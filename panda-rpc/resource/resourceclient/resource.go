// Code generated by goctl. DO NOT EDIT!
// Source: resource.proto

package resourceclient

import (
	"context"

	"Pandax/panda-rpc/resource/resource"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = resource.Request
	Response = resource.Response

	Resource interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultResource struct {
		cli zrpc.Client
	}
)

func NewResource(cli zrpc.Client) Resource {
	return &defaultResource{
		cli: cli,
	}
}

func (m *defaultResource) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := resource.NewResourceClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
